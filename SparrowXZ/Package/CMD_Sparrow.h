#ifndef CMD_SPARROW_HEAD_FILE
#define CMD_SPARROW_HEAD_FILE

//////////////////////////////////////////////////////////////////////////
//公共宏定义

#define KIND_ID						302									//游戏 I D
#define GAME_NAME					TEXT("血战麻将")					//游戏名字

//组件属性
#define GAME_PLAYER					4									//游戏人数
#define VERSION_SERVER				PROCESS_VERSION(6,0,3)				//程序版本
#define VERSION_CLIENT				PROCESS_VERSION(6,0,3)				//程序版本

//游戏状态
#define GS_MJ_FREE					GAME_STATUS_FREE					//空闲状态
#define GS_MJ_CALL					GAME_STATUS_PLAY					//选缺状态
#define GS_MJ_PLAY					(GAME_STATUS_PLAY+1)				//游戏状态

//常量定义
#define MAX_WEAVE					4									//最大组合
#define MAX_INDEX					34									//最大索引
#define MAX_COUNT					14									//最大数目
#define MAX_REPERTORY				108									//最大库存

//扑克定义
#define HEAP_FULL_COUNT				26									//堆立全牌

#define MAX_RIGHT_COUNT				1									//最大权位DWORD个数			

//////////////////////////////////////////////////////////////////////////

//组合子项
struct CMD_WeaveItem
{
	BYTE							cbWeaveKind;						//组合类型
	BYTE							cbCenterCard;						//中心扑克
	BYTE							cbPublicCard;						//公开标志
	WORD							wProvideUser;						//供应用户
};

//////////////////////////////////////////////////////////////////////////
//服务器命令结构

#define SUB_S_GAME_START			100									//游戏开始
#define SUB_S_CALL_CARD				101									//缺门命令
#define SUB_S_BANKER_INFO			102									//庄家信息
#define SUB_S_OUT_CARD				103									//出牌命令
#define SUB_S_SEND_CARD				104									//发送扑克
#define SUB_S_OPERATE_NOTIFY		105									//操作提示
#define SUB_S_OPERATE_RESULT		106									//操作命令
#define SUB_S_GAME_END				107									//游戏结束
#define SUB_S_TRUSTEE				108									//用户托管
#define SUB_S_CHI_HU				109									//用户吃胡
#define SUB_S_GANG_SCORE			110									//杠牌得分
#define SUB_S_WAIT_OPERATE			111									//等待操作

//游戏状态
struct CMD_S_StatusFree
{
	LONGLONG						lCellScore;							//基础金币
	WORD							wBankerUser;						//庄家用户
	bool							bTrustee[GAME_PLAYER];				//是否托管
	bool							bCheatMode;							//防作弊标识

	//历史积分
	LONGLONG						lTurnScore[GAME_PLAYER];			//积分信息
	LONGLONG						lCollectScore[GAME_PLAYER];			//积分信息
};

//游戏状态
struct CMD_S_StatusCall
{
	//游戏变量
	LONGLONG						lCellScore;							//基础金币
	WORD							wBankerUser;						//庄家用户
	bool							bTrustee[GAME_PLAYER];				//是否托管

	//缺门信息
	bool							bCallCard[GAME_PLAYER];				//缺门状态
	BYTE							cbCallCard[GAME_PLAYER];			//缺门数据

	//扑克数据
	BYTE							cbCardCount;						//扑克数目
	BYTE							cbCardData[MAX_COUNT];				//扑克列表
	BYTE							cbSendCardData;						//发送扑克

	//堆立信息
	WORD							wHeapHand;							//堆立头部
	WORD							wHeapTail;							//堆立尾部
	BYTE							cbHeapCardInfo[GAME_PLAYER][2];		//堆牌信息

	//历史积分
	LONGLONG						lTurnScore[GAME_PLAYER];			//积分信息
	LONGLONG						lCollectScore[GAME_PLAYER];			//积分信息
};

//游戏状态
struct CMD_S_StatusPlay
{
	//游戏变量
	LONGLONG						lCellScore;							//单元积分
	WORD							wBankerUser;						//庄家用户
	WORD							wCurrentUser;						//当前用户

	//状态变量
	BYTE							cbActionCard;						//动作扑克
	BYTE							cbActionMask;						//动作掩码
	BYTE							cbLeftCardCount;					//剩余数目
	bool							bTrustee[GAME_PLAYER];				//是否托管
	WORD							wWinOrder[GAME_PLAYER];				//胡牌顺序
	BYTE							cbCallCard[GAME_PLAYER];			//缺门信息

	//出牌信息
	WORD							wOutCardUser;						//出牌用户
	BYTE							cbOutCardData;						//出牌扑克
	BYTE							cbDiscardCount[GAME_PLAYER];		//丢弃数目
	BYTE							cbDiscardCard[GAME_PLAYER][60];		//丢弃记录

	//扑克数据
	BYTE							cbCardCount;						//扑克数目
	BYTE							cbCardData[MAX_COUNT];				//扑克列表
	BYTE							cbSendCardData;						//发送扑克

	//组合扑克
	BYTE							cbWeaveCount[GAME_PLAYER];			//组合数目
	CMD_WeaveItem					WeaveItemArray[GAME_PLAYER][MAX_WEAVE];//组合扑克

	//堆立信息
	WORD							wHeapHand;							//堆立头部
	WORD							wHeapTail;							//堆立尾部
	BYTE							cbHeapCardInfo[GAME_PLAYER][2];		//堆牌信息

	//历史积分
	LONGLONG						lTurnScore[GAME_PLAYER];			//积分信息
	LONGLONG						lCollectScore[GAME_PLAYER];			//积分信息
};

//游戏开始
struct CMD_S_GameStart
{
	LONG							lSiceCount;							//骰子点数
	WORD							wBankerUser;						//庄家用户
	WORD							wCurrentUser;						//当前用户
	BYTE							cbUserAction;						//用户动作
	BYTE							cbCardData[MAX_COUNT*GAME_PLAYER];	//扑克列表
	WORD							wHeapHand;							//堆立牌头
	WORD							wHeapTail;							//堆立牌尾
	BYTE							cbHeapCardInfo[GAME_PLAYER][2];		//堆立信息
	BYTE							cbLeftCardCount;					//剩余扑克
};

//缺门命令
struct CMD_S_CallCard
{
	WORD							wCallUser;							//叫牌用户
};

//庄家信息
struct CMD_S_BankerInfo
{
	WORD				 			wBankerUser;						//庄家玩家
	WORD				 			wCurrentUser;						//当前玩家
	BYTE							cbCallCard[GAME_PLAYER];			//缺门索引
};

//出牌命令
struct CMD_S_OutCard
{
	WORD							wOutCardUser;						//出牌用户
	BYTE							cbOutCardData;						//出牌扑克
};

//发送扑克
struct CMD_S_SendCard
{
	BYTE							cbCardData;							//扑克数据
	BYTE							cbActionMask;						//动作掩码
	WORD							wCurrentUser;						//当前用户
	bool							bTail;								//末尾发牌
};


//操作提示
struct CMD_S_OperateNotify
{
	WORD							wResumeUser;						//还原用户
	BYTE							cbActionMask;						//动作掩码
	BYTE							cbActionCard;						//动作扑克
};

//操作命令
struct CMD_S_OperateResult
{
	WORD							wOperateUser;						//操作用户
	WORD							wProvideUser;						//供应用户
	BYTE							cbOperateCode;						//操作代码
	BYTE							cbOperateCard;						//操作扑克
};

//游戏结束
struct CMD_S_GameEnd
{
	//扑克变量
	BYTE							cbCardCount[GAME_PLAYER];			//扑克数目
	BYTE							cbCardData[GAME_PLAYER][MAX_COUNT];	//扑克数据

	//结束信息
	WORD							wProvideUser[GAME_PLAYER];			//供应用户
	DWORD							dwChiHuRight[GAME_PLAYER];			//胡牌类型

	//积分信息
	LONGLONG						lGameScore[GAME_PLAYER];			//游戏积分
	LONG							lGameTax[GAME_PLAYER];				//游戏税收

	WORD							wWinOrder[GAME_PLAYER];				//胡牌排名

	LONGLONG						lGangScore[GAME_PLAYER];			//详细得分
	BYTE							cbGenCount[GAME_PLAYER];			//根数计数
	WORD							wLostFanShu[GAME_PLAYER][GAME_PLAYER];//损失番数
	LONGLONG						lHuaZhuScore[GAME_PLAYER][GAME_PLAYER];//花猪得分
	LONGLONG						lChaJiaoScore[GAME_PLAYER][GAME_PLAYER];//查收得分
	LONGLONG						lLostHuaZhuScore[GAME_PLAYER][GAME_PLAYER];//花猪得分
	LONGLONG						lLostChaJiaoScore[GAME_PLAYER][GAME_PLAYER];//查收得分
	WORD							wLeftUser;							//逃跑用户
};

//用户托管
struct CMD_S_Trustee
{
	bool							bTrustee;							//是否托管
	WORD							wChairID;							//托管用户
};

//吃胡消息
struct CMD_S_ChiHu
{
	WORD							wChiHuUser;							//吃胡用户
	WORD							wProviderUser;						//提供用户
	BYTE							cbChiHuCard;						//胡牌数据
	BYTE							cbCardCount;						//扑克数目
	LONGLONG						lGameScore;							//游戏分数
	BYTE							cbWinOrder;							//胡牌顺序
};

//杠牌分数
struct CMD_S_GangScore
{
	WORD							wChairId;							//杠牌用户
	BYTE							cbXiaYu;							//刮风下雨
	LONGLONG						lGangScore[GAME_PLAYER];			//杠牌分数
};

//////////////////////////////////////////////////////////////////////////
//客户端命令结构

#define SUB_C_CALL_CARD				1									//用户缺门
#define SUB_C_OUT_CARD				2									//出牌命令
#define SUB_C_OPERATE_CARD			3									//操作扑克
#define SUB_C_TRUSTEE				4									//用户托管

//用户缺门
struct CMD_C_CallCard
{
	BYTE							cbCallCard;							//缺门索引
};

//出牌命令
struct CMD_C_OutCard
{
	BYTE							cbCardData;							//扑克数据
};

//操作命令
struct CMD_C_OperateCard
{
	BYTE							cbOperateCode;						//操作代码
	BYTE							cbOperateCard;						//操作扑克
};

//用户托管
struct CMD_C_Trustee
{
	bool							bTrustee;							//是否托管	
};
//////////////////////////////////////////////////////////////////////////

#endif
